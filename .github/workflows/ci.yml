name: CI

# yamllint disable-line rule:truthy
on:
  push:
    paths-ignore:
      - '.openapi-generator/**'
      - 'contrib/**'
      - 'doc/**'
      - '*.md'
    branches:
      - main
  pull_request:
    paths-ignore:
      - '.openapi-generator/**'
      - 'contrib/**'
      - 'doc/**'
      - '*.md'
    branches:
      - '**'

env:
  CACHE_VERSION: 2
  DEFAULT_PYTHON: 3.8
  PRE_COMMIT_CACHE: ~/.cache/pre-commit

jobs:
  prepare-base:
    name: Prepare base dependencies
    runs-on: ubuntu-latest
    outputs:
      python-key: ${{ steps.generate-python-key.outputs.key }}
      pre-commit-key: ${{ steps.generate-pre-commit-key.outputs.key }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Generate partial Python venv restore key
        id: generate-python-key
        run: >-
          echo "::set-output name=key::base-venv-${{ env.CACHE_VERSION }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}"

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ steps.generate-python-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-base-venv-${{ env.CACHE_VERSION }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-base-venv-${{ env.CACHE_VERSION }}-${{ hashFiles('pyproject.toml') }}-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-base-venv-${{ env.CACHE_VERSION }}-

      - name: Install python dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: Generate partial pre-commit restore key
        id: generate-pre-commit-key
        run: >-
          echo "::set-output name=key::pre-commit-${{ env.CACHE_VERSION }}-${{ hashFiles('.pre-commit-config.yaml') }}"

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: >-
            ${{ runner.os }}-${{ steps.generate-pre-commit-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-${{ env.CACHE_VERSION }}-

      - name: Install pre-commit dependencies
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          poetry run pre-commit install-hooks

  lint-bandit:
    name: Check bandit
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Run bandit
        run: |
          . .venv/bin/activate
          pre-commit run --hook-stage manual bandit --all-files --show-diff-on-failure

  lint-black:
    name: Check black
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Run black
        run: |
          . .venv/bin/activate
          pre-commit run --hook-stage manual black --all-files --show-diff-on-failure

  lint-codespell:
    name: Check codespell
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Register codespell problem matcher
        run: |
          echo "::add-matcher::.github/workflows/matchers/codespell.json"

      - name: Run codespell
        run: |
          . .venv/bin/activate
          pre-commit run --show-diff-on-failure --hook-stage manual codespell --all-files

  lint-flake8:
    name: Check flake8
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Register flake8 problem matcher
        run: |
          echo "::add-matcher::.github/workflows/matchers/flake8.json"

      - name: Run flake8
        run: |
          . .venv/bin/activate
          pre-commit run --hook-stage manual flake8 --all-files

  lint-isort:
    name: Check isort
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Run isort
        run: |
          . .venv/bin/activate
          pre-commit run --hook-stage manual isort --all-files --show-diff-on-failure

  lint-pyupgrade:
    name: Check pyupgrade
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Run pyupgrade
        run: |
          . .venv/bin/activate
          pre-commit run --hook-stage manual pyupgrade --all-files --show-diff-on-failure

  lint-yaml:
    name: Check YAML
    runs-on: ubuntu-latest
    needs: prepare-base
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2.2.2
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Restore base Python virtual environment
        id: cache-venv
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{needs.prepare-base.outputs.python-key }}

      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1

      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ runner.os }}-${{ needs.prepare-base.outputs.pre-commit-key }}

      - name: Fail job if pre-commit cache restore failed
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore pre-commit environment from cache"
          exit 1

      - name: Register yamllint problem matcher
        run: |
          echo "::add-matcher::.github/workflows/matchers/yamllint.json"

      - name: Run yamllint
        run: |
          . .venv/bin/activate
          pre-commit run --hook-stage manual yamllint --all-files --show-diff-on-failure
